axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
proportion_wrong_before_stab_by_geographic_scope
png(filename = paste("D:/Ixodes_scapularis_research_2019/tick_dataset_results_analysis/proportion_wrong_before_stab_by_geographic_scope ",Sys.Date(),".png", sep = ''), width = 600, height = 454)
proportion_wrong_before_stab_by_geographic_scope
dev.off()
tick_infection_data <- data.frame(all_ticks_vs_infected_ticks, proportion_right_for_all_ticks_vs_infected_ticks)
proportion_sig_by_ticks_infected <- ggplot(tick_infection_data, aes(x = all_ticks_vs_infected_ticks, y = proportion_right_for_all_ticks_vs_infected_ticks)) +
geom_boxplot() +
scale_x_discrete(name = "Ticks") +
scale_y_continuous(name = "Proportion significantly right") +
ggtitle("Proportion significantly right by ticks \ninfected") +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
proportion_sig_by_ticks_infected
tested_for_path <- tick_dataset_results[tick_dataset_results$tested_for_b_burgdoferi == "Y",]
tested_for_path$label <- "Tested for infection \nwith B. burgdorferi"
test_abuance <- tick_dataset_results[tick_dataset_results$tested_for_b_burgdoferi == "N",]
test_abuance$label <- "Sampled for Abundance"
all_ticks_vs_infected_ticks <- c(tested_for_path$label, test_abuance$label)
abundance_vs_infected_ticks <- c(tested_for_path$label, test_abuance$label)
proportion_right_for_abudance_vs_infected_ticks <- c(tested_for_path$stability_time, test_abuance$stability_time)
tick_infection_data <- data.frame(abundance_vs_infected_ticks, stability_time_for_abudance_vs_infected_ticks)
abundance_vs_infected_ticks <- c(tested_for_path$label, test_abuance$label)
stability_time_for_abudance_vs_infected_ticks <- c(tested_for_path$stability_time, test_abuance$stability_time)
tick_infection_data <- data.frame(abundance_vs_infected_ticks, stability_time_for_abudance_vs_infected_ticks)
proportion_sig_by_ticks_infected <- ggplot(tick_infection_data, aes(x = all_ticks_vs_infected_ticks, y = proportion_right_for_all_ticks_vs_infected_ticks)) +
geom_boxplot() +
scale_x_discrete(name = "Ticks") +
scale_y_continuous(name = "Proportion significantly right") +
ggtitle("Proportion significantly right by ticks \ninfected") +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
proportion_sig_by_ticks_infected
tested_for_path <- tick_dataset_results[tick_dataset_results$tested_for_b_burgdoferi == "Y",]
tested_for_path$label <- "Tested for infection \nby B. burgdorferi"
test_abuance <- tick_dataset_results[tick_dataset_results$tested_for_b_burgdoferi == "N",]
test_abuance$label <- "Sampled for \nAbundance"
abundance_vs_infected_ticks <- c(tested_for_path$label, test_abuance$label)
stability_time_for_abudance_vs_infected_ticks <- c(tested_for_path$stability_time, test_abuance$stability_time)
tick_infection_data <- data.frame(abundance_vs_infected_ticks, stability_time_for_abudance_vs_infected_ticks)
proportion_sig_by_ticks_infected <- ggplot(tick_infection_data, aes(x = all_ticks_vs_infected_ticks, y = proportion_right_for_all_ticks_vs_infected_ticks)) +
geom_boxplot() +
scale_x_discrete(name = "Response variable") +
scale_y_continuous(name = "Proportion significantly right") +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
proportion_sig_by_ticks_infected
tested_for_path <- tick_dataset_results[tick_dataset_results$tested_for_b_burgdoferi == "Y",]
tested_for_path$label <- "Tested for infection \nby B. burgdorferi"
test_abuance <- tick_dataset_results[tick_dataset_results$tested_for_b_burgdoferi == "N",]
test_abuance$label <- "Sampled for \nAbundance"
abundance_vs_infected_ticks <- c(tested_for_path$label, test_abuance$label)
stability_time_for_abudance_vs_infected_ticks <- c(tested_for_path$stability_time, test_abuance$stability_time)
tick_infection_data <- data.frame(abundance_vs_infected_ticks, stability_time_for_abudance_vs_infected_ticks)
tested_for_path <- tick_dataset_results[tick_dataset_results$tested_for_b_burgdoferi == "Y",]
tested_for_path$label <- "Tested for infection \nby B. burgdorferi"
test_abuance <- tick_dataset_results[tick_dataset_results$tested_for_b_burgdoferi == "N",]
test_abuance$label <- "Sampled for \nAbundance"
abundance_vs_infected_ticks <- c(tested_for_path$label, test_abuance$label)
stability_time_for_abudance_vs_infected_ticks <- c(tested_for_path$stability_time, test_abuance$stability_time)
tick_infection_data <- data.frame(abundance_vs_infected_ticks, stability_time_for_abudance_vs_infected_ticks)
proportion_sig_by_ticks_infected <- ggplot(tick_infection_data, aes(x = abundance_vs_infected_ticks, y = stability_time_for_abudance_vs_infected_ticks)) +
geom_boxplot() +
scale_x_discrete(name = "Response variable") +
scale_y_continuous(name = "Proportion significantly right") +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
proportion_sig_by_ticks_infected
proportion_sig_by_ticks_infected <- ggplot(tick_infection_data, aes(x = abundance_vs_infected_ticks, y = stability_time_for_abudance_vs_infected_ticks)) +
geom_boxplot() +
scale_x_discrete(name = "Response variable") +
scale_y_continuous(name = "Stability time", limits = c(0, 25)) +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
proportion_sig_by_ticks_infected
tested_for_path <- tick_dataset_results[tick_dataset_results$tested_for_b_burgdoferi == "Y",]
tested_for_path$label <- "Tested for infection \nof B. burgdorferi"
test_abuance <- tick_dataset_results[tick_dataset_results$tested_for_b_burgdoferi == "N",]
test_abuance$label <- "Sampled for \nAbundance"
abundance_vs_infected_ticks <- c(tested_for_path$label, test_abuance$label)
stability_time_for_abudance_vs_infected_ticks <- c(tested_for_path$stability_time, test_abuance$stability_time)
tick_infection_data <- data.frame(abundance_vs_infected_ticks, stability_time_for_abudance_vs_infected_ticks)
proportion_sig_by_ticks_infected <- ggplot(tick_infection_data, aes(x = abundance_vs_infected_ticks, y = stability_time_for_abudance_vs_infected_ticks)) +
geom_boxplot() +
scale_x_discrete(name = "Response variable") +
scale_y_continuous(name = "Stability time", limits = c(0, 25)) +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
proportion_sig_by_ticks_infected
stability_time_by_response <- ggplot(tick_infection_data, aes(x = abundance_vs_infected_ticks, y = stability_time_for_abudance_vs_infected_ticks)) +
geom_boxplot() +
geom_jitter() +
scale_x_discrete(name = "Response variable") +
scale_y_continuous(name = "Stability time", limits = c(0, 25)) +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
stability_time_by_response
stability_time_by_response <- ggplot(tick_infection_data, aes(x = abundance_vs_infected_ticks, y = stability_time_for_abudance_vs_infected_ticks)) +
geom_boxplot() +
geom_jitter() +
scale_x_discrete(name = "Response variable") +
scale_y_continuous(name = "Stability time", limits = c(0, 25)) +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
stability_time_by_response
png(filename = paste("D:/Ixodes_scapularis_research_2019/tick_dataset_results_analysis/stability_time_by_response ",Sys.Date(),".png", sep = ''), width = 600, height = 454)
stability_time_by_response
dev.off()
t.test(tick_infection_data[tick_infection_data$abundance_vs_infected_ticks == "Tested for infection \nof B. burgdorferi",]$stability_time_for_abudance_vs_infected_ticks, tick_infection_data[tick_infection_data$abundance_vs_infected_ticks == "Sampled for \nAbundance",]$stability_time_for_abudance_vs_infected_ticks)
tested_for_path <- tick_dataset_results[tick_dataset_results$tested_for_b_burgdoferi == "Y",]
tested_for_path$label <- "Tested for infection \nof B. burgdorferi"
test_abuance <- tick_dataset_results[tick_dataset_results$tested_for_b_burgdoferi == "N",]
test_abuance$label <- "Sampled for \nAbundance"
abundance_vs_infected_ticks <- c(tested_for_path$label, test_abuance$label)
stability_time_for_abudance_vs_infected_ticks <- c(tested_for_path$stability_time, test_abuance$proportion_wrong_before_stability)
tick_infection_data <- data.frame(abundance_vs_infected_ticks, stability_time_for_abudance_vs_infected_ticks)
t.test(tick_infection_data[tick_infection_data$abundance_vs_infected_ticks == "Tested for infection \nof B. burgdorferi",]$stability_time_for_abudance_vs_infected_ticks, tick_infection_data[tick_infection_data$abundance_vs_infected_ticks == "Sampled for \nAbundance",]$stability_time_for_abudance_vs_infected_ticks)
proportion_wrong_before_stab_for_abudance_vs_infected_ticks <- c(tested_for_path$stability_time, test_abuance$proportion_wrong_before_stability)
tick_infection_data <- data.frame(abundance_vs_infected_ticks, proportion_wrong_before_stab_for_abudance_vs_infected_ticks)
t.test(tick_infection_data[tick_infection_data$abundance_vs_infected_ticks == "Tested for infection \nof B. burgdorferi",]$proportion_wrong_before_stab_for_abudance_vs_infected_ticks, tick_infection_data[tick_infection_data$abundance_vs_infected_ticks == "Sampled for \nAbundance",]$proportion_wrong_before_stab_for_abudance_vs_infected_ticks)
stability_time_by_response <- ggplot(tick_infection_data, aes(x = abundance_vs_infected_ticks, y = proportion_wrong_before_stab_for_abudance_vs_infected_ticks)) +
geom_boxplot() +
geom_jitter() +
scale_x_discrete(name = "Response variable") +
scale_y_continuous(name = "Stability time", limits = c(0, 25)) +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
stability_time_by_response
tested_for_path <- tick_dataset_results[tick_dataset_results$tested_for_b_burgdoferi == "Y",]
tested_for_path$label <- "Tested for infection \nof B. burgdorferi"
test_abuance <- tick_dataset_results[tick_dataset_results$tested_for_b_burgdoferi == "N",]
test_abuance$label <- "Sampled for \nAbundance"
abundance_vs_infected_ticks <- c(tested_for_path$label, test_abuance$label)
proportion_wrong_before_stab_for_abudance_vs_infected_ticks <- c(tested_for_path$proportion_wrong_before_stability, test_abuance$proportion_wrong_before_stability)
tick_infection_data <- data.frame(abundance_vs_infected_ticks, proportion_wrong_before_stab_for_abudance_vs_infected_ticks)
t.test(tick_infection_data[tick_infection_data$abundance_vs_infected_ticks == "Tested for infection \nof B. burgdorferi",]$proportion_wrong_before_stab_for_abudance_vs_infected_ticks, tick_infection_data[tick_infection_data$abundance_vs_infected_ticks == "Sampled for \nAbundance",]$proportion_wrong_before_stab_for_abudance_vs_infected_ticks)
stability_time_by_response <- ggplot(tick_infection_data, aes(x = abundance_vs_infected_ticks, y = proportion_wrong_before_stab_for_abudance_vs_infected_ticks)) +
geom_boxplot() +
geom_jitter() +
scale_x_discrete(name = "Response variable") +
scale_y_continuous(name = "Stability time", limits = c(0, 25)) +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
stability_time_by_response
stability_time_by_response <- ggplot(tick_infection_data, aes(x = abundance_vs_infected_ticks, y = proportion_wrong_before_stab_for_abudance_vs_infected_ticks)) +
geom_boxplot() +
geom_jitter() +
scale_x_discrete(name = "Response variable") +
scale_y_continuous(name = "Stability time", limits = c(0, 1)) +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
stability_time_by_response
proportion_wrong_before_stab_by_response <- ggplot(tick_infection_data, aes(x = abundance_vs_infected_ticks, y = proportion_wrong_before_stab_for_abudance_vs_infected_ticks)) +
geom_boxplot() +
geom_jitter() +
scale_x_discrete(name = "Response variable") +
scale_y_continuous(name = "Proportion significantly wrong \nbefore stability", limits = c(0, 1)) +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
proportion_wrong_before_stab_by_response
png(filename = paste("D:/Ixodes_scapularis_research_2019/tick_dataset_results_analysis/proportion_wrong_before_stab_by_response ",Sys.Date(),".png", sep = ''), width = 600, height = 454)
proportion_wrong_before_stab_by_response
dev.off()
tick_dataset_results_drag_found <- subset(tick_dataset_results, sampling_technique == "dragging" | sampling_technique == "found on a person")
stability_time_by_samp_tech <- ggplot(tick_dataset_results_drag_found, aes(x = sampling_technique, y = stability_time)) +
geom_boxplot() +
geom_jitter() +
scale_x_discrete(name = "Sampling technique") +
scale_y_continuous(name = "Stability time", limits = c(0,25)) +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
stability_time_by_samp_tech
tick_dataset_results_ls <- subset(tick_dataset_results, life_stage == "adult" | life_stage == "nymph" | life_stage == "larvae")
stability_time_by_life_stage <- ggplot(tick_dataset_results_ls, aes(x = life_stage, y = stability_time)) +
geom_boxplot() +
geom_jitter() +
scale_x_discrete(name = "Life stage") +
scale_y_continuous(name = "Stability time", limits = c(0,25)) +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
stability_time_by_life_stage
stability_time_by_geographic_scope <- ggplot(tick_dataset_results, aes(x = geographic_scope, y = stability_time)) +
geom_boxplot() +
geom_jitter() +
scale_x_discrete(name = "Life stage") +
scale_y_continuous(name = "Stability time", limits = c(0,25)) +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
stability_time_by_geographic_scope
stability_time_by_geographic_scope <- ggplot(tick_dataset_results, aes(x = geographic_scope, y = stability_time)) +
geom_boxplot() +
geom_jitter() +
scale_x_discrete(name = "Geographic scope") +
scale_y_continuous(name = "Stability time", limits = c(0,25)) +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
stability_time_by_geographic_scope
png(filename = paste("D:/Ixodes_scapularis_research_2019/tick_dataset_results_analysis/stability_time_by_geographic_scope ",Sys.Date(),".png", sep = ''), width = 600, height = 454)
stability_time_by_geographic_scope
dev.off()
length(tick_dataset_results)
length(tick_dataset_results$stability_time)
length(dragging)
#33 datasets
length(found)
found <- subset(tick_dataset_results, sampling_technique == "found on a person")
dragging <- subset(tick_dataset_results, sampling_technique == "dragging")
length(dragging)
#34 datasets
length(found)
length(dragging$stability_time)
#90 datasets
length(found$stability_time)
nymphs <- subset(tick_dataset_results, life_stage == "nymphs")
adults <- subset(tick_dataset_results, life_stage == "adults")
nymphs <- subset(tick_dataset_results, life_stage == "nymphs")
larvae <- subset(tick_dataset_results, life_stage == "larvae")
length(adults$stability_time)
adults <- subset(tick_dataset_results, life_stage == "adults")
adults
adults <- subset(tick_dataset_results, life_stage == "adult")
length(adults$stability_time)
#63 datasets
length(nymphs$stability_time)
nymphs <- subset(tick_dataset_results, life_stage == "nymph")
length(nymphs$stability_time)
#66 datasets
length(larvae$stability_time)
county <- subset(tick_dataset_results, geographic_scope == "county")
town <- subset(tick_dataset_results, geographic_scope == "town")
state_forest <- subset(tick_dataset_results, geographic_scope == "state forest")
grid <- subset(tick_dataset_results, geographic_scope == "grid")
length(county$stability_time)
county <- subset(tick_dataset_results, geographic_scope == "County")
length(county$stability_time)
town <- subset(tick_dataset_results, geographic_scope == "Town")
state_forest <- subset(tick_dataset_results, geographic_scope == "State forest")
grid <- subset(tick_dataset_results, geographic_scope == "Grid")
#73 datasets
length(town$stability_time)
#186 datasets
length(state_forest$stability_time)
#6 datasets
length(grid$stability_time)
pathogen <- subset(tick_dataset_results, tested_for_b_burgdoferi == "Y")
abundance <- subset(tick_dataset_results, tested_for_b_burgdoferi == "N")
length(pathogen$stability_time)
#114 datasets
length(abundance$stability_time)
t.test(dragging$stability_time, found$stability_time)
t.test(dragging$proportion_wrong_before_stability, found$proportion_wrong_before_stability)
t.test(adults$stability_time, nymphs$stability_time)
#t = -0.63883, df = 126.84, p-value = 0.5241
#insignificant
t.test(adults$stability_time, larvae$stability_time)
#t = -5.9627, df = 10.111, p-value = 0.0001328
#significant
t.test(nymphs$stability_time, larvae$stability_time)
t.test(adults$proportion_wrong_before_stability, nymphs$proportion_wrong_before_stability)
#t = 2.8993, df = 113.64, p-value = 0.00449
#significant
t.test(adults$proportion_wrong_before_stability, larvae$proportion_wrong_before_stability)
#t = 0.43788, df = 8.7735, p-value = 0.6721
#insignificant
t.test(nymphs$proportion_wrong_before_stability, larvae$proportion_wrong_before_stability)
# read in tick dataset results from 3/25/2020
tick_dataset_results <- readxl::read_xlsx("D:/Ixodes_scapularis_research_2019/tick_dataset_results_analysis/data/tick dataset results_3_14_2020.xlsx", sheet = 1)
tick_dataset_results$pw_label <- "Overall proportion wrong"
tick_dataset_results$pwbs <- "Proportion wrong before \nstability time"
overall_pw_vs_pwbs_lab <- c(tick_dataset_results$pw_label, tick_dataset_results$pwbs)
overall_pw_vs_pwbs_value <- c(tick_dataset_results$proportion_wrong, tick_dataset_results$proportion_wrong_before_stability)
overall_pw_vs_pwbs_df <- data.frame(overall_pw_vs_pwbs_lab, overall_pw_vs_pwbs_value)
overall_pw_vs_pwbs <- ggplot(overall_pw_vs_pwbs_df, aes(x = overall_pw_vs_pwbs_lab, y = overall_pw_vs_pwbs_value)) +
geom_boxplot() +
scale_x_discrete(name = "Statistic") +
scale_y_continuous(name = "Proportion") +
ggtitle("Overall proportion wrong by proportion \nwrong before stability") +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 12),
axis.text.y=element_text(colour="black", size = 12),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
overall_pw_vs_pwbs
overall_pw_vs_pwbs <- ggplot(overall_pw_vs_pwbs_df, aes(x = overall_pw_vs_pwbs_lab, y = overall_pw_vs_pwbs_value)) +
geom_boxplot() +
scale_x_discrete(name = "Statistic") +
scale_y_continuous(name = "Proportion") +
ggtitle("Overall proportion wrong by proportion \nwrong before stability") +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 15),
axis.text.y=element_text(colour="black", size = 12),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
overall_pw_vs_pwbs
overall_pw_vs_pwbs <- ggplot(overall_pw_vs_pwbs_df, aes(x = overall_pw_vs_pwbs_lab, y = overall_pw_vs_pwbs_value)) +
geom_boxplot() +
geom_jitter() +
scale_x_discrete(name = "Statistic") +
scale_y_continuous(name = "Proportion") +
ggtitle("Overall proportion wrong by proportion \nwrong before stability") +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 15),
axis.text.y=element_text(colour="black", size = 12),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
overall_pw_vs_pwbs
png(filename = paste("D:/Ixodes_scapularis_research_2019/tick_dataset_results_analysis/overall_pw_vs_pwbs ",Sys.Date(),".png", sep = ''), width = 600, height = 454)
overall_pw_vs_pwbs
dev.off()
overall_pw_vs_pwbs <- ggplot(overall_pw_vs_pwbs_df, aes(x = overall_pw_vs_pwbs_lab, y = overall_pw_vs_pwbs_value)) +
geom_boxplot() +
geom_jitter() +
scale_x_discrete(name = "Statistic") +
scale_y_continuous(name = "Proportion") +
ggtitle("Overall proportion wrong by proportion \nwrong before stability") +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 16),
axis.text.y=element_text(colour="black", size = 12),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
overall_pw_vs_pwbs
png(filename = paste("D:/Ixodes_scapularis_research_2019/tick_dataset_results_analysis/overall_pw_vs_pwbs ",Sys.Date(),".png", sep = ''), width = 600, height = 454)
overall_pw_vs_pwbs
dev.off()
